CREATE DATABASE INSTITUTO

USE INSTITUTO
go

CREATE TABLE CURSO
(
	IDE VARCHAR(6) PRIMARY KEY,
	NOMBRE VARCHAR(30) NOT NULL,
	DURACION TINYINT NOT NULL,
	PRECIO INT

)

CREATE TABLE CURSOCORTO
(
	IDE VARCHAR(6) FOREIGN KEY REFERENCES CURSO(IDE) NOT NULL,
	AREA_APLICACION VARCHAR(50) NOT NULL
)

CREATE TABLE CURSO_ESPECIALIZADO
(
	IDE VARCHAR(6) FOREIGN KEY REFERENCES CURSO(IDE) NOT NULL,
	PRERREQUISITOS VARCHAR(100) NOT NULL
)
CREATE TABLE ALUMNO
(
	CI INT PRIMARY KEY , 
	NOMBRE VARCHAR(30) NOT NULL,
	CALLE VARCHAR(30) NOT NULL,
	NUMERO INT NOT NULL,
	BARRIO VARCHAR(30) NOT NULL

)

CREATE TABLE TELEFONO
(
	CI INT FOREIGN KEY REFERENCES ALUMNO(CI) NOT NULL,
	NUMERO_TEL INT,
	PRIMARY KEY (CI, NUMERO_TEL)
)

CREATE TABLE INSCRIPCION
(
	IDINSCRIPCION INT PRIMARY KEY IDENTITY(100,1),
	IDE VARCHAR(6) FOREIGN KEY REFERENCES CURSO(IDE),
	CI INT FOREIGN KEY REFERENCES ALUMNO(CI),
	FECHA_INS DATE NOT NULL,
	NOMBRE_EMP VARCHAR(20) NOT NULL

)
                                     
									 --INSERCION DE DATOS--

INSERT INTO CURSO VALUES('aaaaaa', 'JAVA SCRIPT TALLER ',6, 22500),
                       ('aaabbb', 'INTRODUCCION A PHYTHON',8, 20500),
					   ('aaaccc', 'INTRODUCCION PHP',5, 12500),
					   ('aaaddd', 'ANGULAR 1',16, 45500),
					   ('aaaeee', 'AUXILIAR EN VENTAS',24, 40500),
					   ('aaafff', 'INTRODUCCION A CONTABLILIDAD',16, 12000),
					   ('aaahhh', 'ADMINISTRACION 1',18, 12000),
					   ('aaajjj', 'VENTAS ONLINE INTRODUCCION',24, 23000),
					   ('aaakkk', 'INTRODUCION A DISEÑO WEB',12, 40555),
					   ('aaalll', 'PHOTO SHOP 1',8, 50500),
					   ('aaannn', 'DISENO 3D TALLER',6, 40000),
					   ('aaammm', 'JAVA SCRIPT ',32, 60000),
                        ('aaaggg', ' PHYTHON ',26, 37800),
						('aaaooo', ' PHP ',24, 23500),
						('aaappp', ' ANGULAR ',24, 22500),
						('aaaqqq', ' GERENTE EN VENTAS ',24, 39200),
						('aaarrr', ' CONTABILIDAD ',36, 17600),
						('aaaiii', ' ANALISTA EN ADMINISTRACION ',30, 30000),
						('aaazzz', ' VENTAS ONLINE AVANZADO ',30, 43500),
						('aaaxxx', ' DISENO WEB 2.0 ',42, 50000),
						('aaavvv', ' PHOTO SHOP AVANZADO',24, 52500),
						('aaawww', 'DISENO WEB 3D ',28, 65500)
	
                        
						

INSERT INTO CURSOCORTO VALUES('aaaaaa', 'PROGRAMACION'),
                             ('aaabbb', 'PROGRAMACION'),
							 ('aaaccc', 'PROGRAMACION'),
							 ('aaaddd', 'PROGRAMACION'),
							 ('aaaeee', 'ECONOMIA'),
							 ('aaafff', 'ECONOMIA'),
							 ('aaaggg', 'ECONOMIA'),
							 ('aaahhh', 'ECONOMIA'),
							 ('aaajjj', 'DISEÑO'),
							 ('aaakkk', 'DISEÑO'),
							 ('aaannn', 'DISEÑO')

   INSERT INTO CURSO_ESPECIALIZADO VALUES('aaavvv', 'TENER CONOCIMIENTOS BASICOS DEL CURSO'),
                                         ('aaawww', 'VOLUNTAD DE APRENDIZAJE'),
										 ('aaazzz',  'CICLO BASICO COMPLETO'),
										 ('aaaooo', 'CICLO BASIO COMPLETO'),
										 ('aaappp', 'MANEJO DE HERRAMIENTAS INFORMATICAS'),
										 ('aaaqqq', 'CONOCIMIENTOS BASICOS DEL TEMA '),
										 ('aaalll', 'TENER UNA LAPTOP CON PROCESADOR I3 CON 8GB DE RAM Y 50 DE ESPACIO'),
										 ('aaammm', 'CONOCIMIENTOS BSICOS DEL TEMA'),
										 ('aaaiii', 'CONOCIMIENTOS BASICOS '),
										 ('aaarrr', 'HABER CURSADO CICLO BASICO COMPLETO '),
										 ('aaaxxx', 'MANEJO DE HERRAMIENTAS DE INFORMATICA ')
										 
										 

   INSERT INTO ALUMNO VALUES(1111111, 'JORGE', 'CUAREIM ', 236, 'CENTRO'),
                            (2222222, 'JUAN', 'PAYSANDU ', 112, 'CORDON'),
							(3333333, 'PEDRO', 'URUGUAY ', 838, 'CIUDAD VIEJA'),
							(4444444, 'DIEGO', 'MAGALLANES ', 467, 'CORDON'),
							(5555555, 'JUNIOR', 'CERRO LARGO ', 635, 'TRES CRUSES'),
							(6666666, 'EDUARDO', 'RONDAU ', 222, 'GOES'),
							(7777777, 'BRAYAN', 'GALICIA  ', 332, 'PRADO'),
							(8888888, 'YONY', 'GRAL FLORES ', 454, 'CERRITO')

 INSERT INTO TELEFONO VALUES(1111111, 093747444),
                            (2222222, 094647884),
							(3333333, 096474748),
							(4444444, 097593957),
							(5555555, 095554677),
							(6666666, 092912282),
							(7777777, 099505547),
							(8888888, 094757564),
                             (1111111, 094744678)

INSERT INTO INSCRIPCION VALUES('aaaaaa', 1111111, '17-12-2019', 'DANIEL'),
                              ('aaahhh', 2222222, '15-3-2020', 'DANIEL'),
							  ('aaaggg', 2222222, '12-3-2013', 'GEREMIAS'),
							  ('aaaaaa', 3333333, '29-5-2000', 'GEREMIAS'),
							  ('aaaaaa', 4444444, '27-3-2009', 'MARCOS'),
							  ('aaaaaa', 5555555, '8-5-2019', 'MARCOS'),
							  ('aaaaaa', 5555555, '9-11-2015', 'DIEGO'),
							  ('aaabbb', 5555555, '19-4-2010', 'DIEGO'),
							  ('aaaaaa', 7777777, '1-1-2018', 'MIGUEL'),
							  ('aaaaaa', 6666666, '2-3-2008', 'DANIEL'),
							  ('aaaeee', 4444444, '15-4-2013', 'MIGUEL'),
							  ('aaabbb', 1111111, '30-6-2003', 'DANIEL'),
							  ('aaajjj', 7777777, '20-4-2013', 'DANIEL'),
							  ('aaafff', 5555555, '18-4-2005', 'MIGUEL'),
							  ('aaaaaa', 6666666, '30-8-2006', 'DIEGO'),
							  ('aaarrr',2222222, '4-5-2017', 'DANIEL'),
							  ('aaaaaa', 2222222, '5-3-2004', 'DANIEL'),
							  ('aaaaaa', 6666666, '9-11-2007', 'DANIEL'),
							  ('aaaccc', 1111111, '9-10-2008', 'MARCOS'),
							  ('aaaaaa', 4444444, '2-4-2016', 'MARCOS'),
							  ('aaaxxx',7777777, '2-7-2006', 'MIGUEL'),
							  ('aaafff', 8888888, '1-9-2019', 'MIGUEL'),
							  ('aaaaaa', 8888888, '1-2-2019', 'MAURO'),
							  ('aaaccc', 1111111, '16-10-2019', 'DANIEL'),
							  ('aaaxxx', 8888888, '11-9-2019', 'MIGUEL'),
							  ('aaarrr', 7777777, '2-2-2020', 'MIGUEL'),
							  ('aaajjj', 8888888, '1-2-2020', 'MIGUEL'),
							  ('aaaeee', 8888888, '1-8-2019', 'MAURO')

							  --PROCEDIMMIENTOS ALMACENADOS--
							  --BUSCAR ALUMNOS 
CREATE PROC SP_BUSCAR_ALUMNO @CI INT
AS 
BEGIN
SELECT distinct ALUMNO.* FROM ALUMNO WHERE  ALUMNO.CI = @CI 
END 
GO
--AGREGAR TELEFONO
CREATE PROC SP_AGREGAR_TEL
@CI INT,
@NUMERO_TEL INT
AS 
BEGIN
 IF EXISTS(SELECT TELEFONO.* FROM TELEFONO JOIN ALUMNO ON NUMERO_TEL =  @NUMERO_TEL AND  TELEFONO.CI = @CI WHERE ALUMNO.CI = TELEFONO.CI  )
            RETURN -1 --YA EXISTE UN ALUMNO CON ESE TELEFONO
  BEGIN TRAN  
   INSERT TELEFONO VALUES (@CI, @NUMERO_TEL)
    IF @@ERROR != 0
	RETURN -2
	COMMIT TRAN 
	RETURN 1
END 
GO
DROP PROC SP_AGREGAR_TEL
--AGREGAR ALUMNO

CREATE PROC SP_AGREGAR_ALUMNO

@CI INT,
@NOMBRE VARCHAR(30), 
@CALLE VARCHAR(30), 
@NUMERO INT,
@BARRIO VARCHAR(30)
 AS 
 BEGIN 
	IF  EXISTS (SELECT ALUMNO.* FROM ALUMNO WHERE ALUMNO.CI = @CI )
	                RETURN -1 --YA EXISTE UN ALUMNO CON ESA CEDULA
    BEGIN TRAN

	   INSERT ALUMNO VALUES (@CI, @NOMBRE, @CALLE, @NUMERO, @BARRIO)
	      IF(@@ERROR != 0)
		    BEGIN
			ROLLBACK TRAN 
			RETURN -2 --ERROR DE INSERCION
			END
	
	COMMIT TRAN
		RETURN 1
			
		  	  
 END 
 GO

 --EIDTAR ALUMNO

 
 CREATE PROC SP_EDITAR_ALUMNO

@CI INT,
@NOMBRE VARCHAR(30), 
@CALLE VARCHAR(30), 
@NUMERO INT,
@BARRIO VARCHAR(30)
 AS 
 BEGIN 
    BEGIN TRAN

	   UPDATE ALUMNO SET  NOMBRE =  @NOMBRE, CALLE = @CALLE, NUMERO = @NUMERO, BARRIO = @BARRIO  WHERE CI = @CI
	      IF(@@ERROR != 0)
		    BEGIN
			ROLLBACK TRAN 
			RETURN -2 --ERROR DE EDICION
			END
			    
		COMMIT TRAN
		RETURN 1
			   
 END 
 GO

 --EDITAR TELEFONO 
 CREATE PROC SP_EDITAR_TELEFONO
 @CI INT,
 @NUMERO_TEL INT
 AS 
 BEGIN
 BEGIN TRAN 
   UPDATE TELEFONO SET  NUMERO_TEL = @NUMERO_TEL WHERE CI = @CI
			           IF (@@ERROR != 0)
				          BEGIN 
					        ROLLBACK TRAN
					        RETURN -2--ERROR DE EDICION DE TELEFONO
					      END
						  COMMIT TRAN 
						  RETURN 1
END
GO
DROP PROC SP_ELIMINAR_ALUMNO
 --ELINIMAR ALUMNO

CREATE PROC SP_ELIMINAR_ALUMNO
@CI INT 
AS
BEGIN
    IF NOT EXISTS ( SELECT ALUMNO.*  FROM ALUMNO where CI = @CI)
          RETURN -1 --NO EXISTE ALUMNO CON LA CEDULA
		
BEGIN TRAN 
		DELETE INSCRIPCION WHERE   INSCRIPCION.CI = @CI
		      IF (@@ERROR != 0)
			     BEGIN 
				 ROLLBACK TRAN
				 RETURN -2 -- ERROR AL ELIMNINAR   INSCRIPCION
				 END
	   DELETE TELEFONO WHERE   TELEFONO.CI = @CI
		      IF (@@ERROR != 0)
			     BEGIN 
				 ROLLBACK TRAN
				 RETURN -3 -- ERROR AL ELIMNINAR   TELEFONO
				 END


		DELETE ALUMNO WHERE  ALUMNO.CI = @CI 
				IF (@@ERROR != 0 )--ERROR AL ELIMINAR ALUMNO
				    BEGIN
						ROLLBACK TRAN
						RETURN -4
				    END 
				ELSE 
				   BEGIN 
						COMMIT TRAN 
						RETURN 1 --ELIMINACION EXITOSA
				   END 

END              
GO


 --AGREGAR INSCRIPCION
CREATE PROC SP_Agregar_Inscripcion 

@IDE varchar(6),
@CI INT, 
@FECHA_INS DATE, 
@NOMBRE_EMP VARCHAR(20)
 AS 
 BEGIN 
	  IF  EXISTS (SELECT INSCRIPCION.* FROM INSCRIPCION WHERE INSCRIPCION.IDE = @IDE AND INSCRIPCION.CI = @CI)
	                RETURN -1 --YA EXISTE UNA INSCRIPCION PARA ESE ALUMNO EN ESE CURSO
		BEGIN TRAN

	   INSERT INSCRIPCION VALUES (@IDE, @CI, @FECHA_INS, @NOMBRE_EMP)
	       IF(@@ERROR != 0)
		    BEGIN
			ROLLBACK TRAN 
			RETURN -2 --ERROR DE INSERCION
			END
		   COMMIT TRAN
		   RETURN IDENT_CURRENT('INSCRIPCION')
		  		
  END 
  GO

  --BUSCAR ESPECIALIZADO 
  CREATE PROC BUSCAR_ESPECIALIZADO @IDE VARCHAR(6)
  AS
  BEGIN
  SELECT CURSO.*, PRERREQUISITOS FROM CURSO INNER JOIN CURSO_ESPECIALIZADO ON CURSO.IDE = @IDE
  END
  GO
  --BUSCAR CURSO CORTO
   CREATE PROC BUSCAR_CURSOCORTO @IDE VARCHAR(6)
  AS
  BEGIN
  SELECT CURSO.*, AREA_APLICACION FROM CURSO INNER JOIN CURSOCORTO ON CURSO.IDE = @IDE
  END
  GO

  --AGREGAR CURSO CORTO

CREATE PROC SP_AGREGAR_CURSO_CORTO

@IDE VARCHAR(6),
@NOMBRE VARCHAR(30), 
@DURACION TINYINT, 
@PRECIO INT,
@AREA_APLICACION VARCHAR(50)
 AS 
 BEGIN 
	IF  EXISTS (SELECT CURSO.* FROM CURSO WHERE CURSO.IDE = @IDE )
	                RETURN -1 --YA EXISTE UN CURSO CON ESE IDE
BEGIN TRAN

	   INSERT CURSO VALUES (@IDE, @NOMBRE, @DURACION, @PRECIO)
	      IF(@@ERROR != 0)
		    BEGIN
			ROLLBACK TRAN 
			RETURN -2 --ERROR DE INSERCION
			END
	
	      ELSE 
		      BEGIN
			      INSERT CURSOCORTO VALUES (@IDE, @AREA_APLICACION)
			           IF (@@ERROR != 0)
				          BEGIN 
					        ROLLBACK TRAN
					        RETURN -3
					      END
				       ELSE 
					       BEGIN 
					         COMMIT TRAN
					         RETURN 1
			               END
		  	  END
 END 
 GO

 --AGREGAR CURSO ESPECIALIZADO

 CREATE PROC SP_AGREGAR_ESPECIALIZADO

@IDE VARCHAR(6),
@NOMBRE VARCHAR(30), 
@DURACION TINYINT, 
@PRECIO INT,
@PRERREQUISITOS VARCHAR(100)
 AS 
 BEGIN 
	IF  EXISTS (SELECT CURSO_ESPECIALIZADO.* FROM CURSO_ESPECIALIZADO WHERE CURSO_ESPECIALIZADO.IDE = @IDE )
	                RETURN -1 --YA EXISTE UN CURSO CON ESE IDE
BEGIN TRAN

	   INSERT CURSO VALUES (@IDE, @NOMBRE, @DURACION, @PRECIO)
	      IF(@@ERROR != 0)
		    BEGIN
			ROLLBACK TRAN 
			RETURN -2 --ERROR DE INSERCION
			END
	
	      ELSE 
		      BEGIN
			      INSERT CURSO_ESPECIALIZADO VALUES (@IDE, @PRERREQUISITOS)
			           IF (@@ERROR != 0)
				          BEGIN 
					        ROLLBACK TRAN
					        RETURN -3
					      END
				       ELSE 
					       BEGIN 
					         COMMIT TRAN
					         RETURN 1
			               END
		  	  END
	
 END 
 GO
 
 --LISTADO ALUMNOS 
 CREATE PROC SP_lISTADO_ALUMNOS
 AS 
 BEGIN 
 SELECT DISTINCT ALUMNO.* FROM ALUMNO 
 END
 GO

 --LISTADO INSCRIPCIONES POR CURSO

 CREATE PROC LISTARINSCRIPCIONXCURSO @IDE VARCHAR(6)
  AS
 BEGIN
	SELECT * 
	FROM INSCRIPCION 
	INSCRIPCIONES inner join CURSO CURSO
	ON INSCRIPCIONES.IDE = CURSO.IDE
	WHERE INSCRIPCIONES.IDE = @IDE
END
GO
--LISTADO INCRIPCION POR ALUMNO
CREATE PROC SP_SP_LISTARINSCRIPCIONXALUMNO 
@CI INT
AS
BEGIN
 SELECT DISTINCT INSCRIPCION.* FROM INSCRIPCION WHERE INSCRIPCION.CI = @CI
 END
 GO
 --LISTADO DE CURSOS CORTOS 
 CREATE PROC SP_LISTADO_CURSOCORTO
 AS 
 BEGIN 
 SELECT DISTINCT  CURSO.*, AREA_APLICACION FROM CURSO
  JOIN CURSOCORTO ON CURSO.IDE = CURSOCORTO.IDE
  JOIN INSCRIPCION ON INSCRIPCION.IDE = CURSO.IDE 
 END
 GO
 
 --LISTADO CURSOS ESPECIALIZADOS 
 CREATE PROC SP_LISTADO_CURSOESPECIALIZADO
 AS 
 BEGIN
 SELECT DISTINCT CURSO.*, PRERREQUISITOS FROM CURSO
  JOIN CURSO_ESPECIALIZADO ON CURSO.IDE = CURSO_ESPECIALIZADO.IDE
  JOIN INSCRIPCION ON INSCRIPCION.IDE = CURSO.IDE 
 END
 GO

 --LISTADO CURSOS 
 CREATE PROC SP_LISTADOCURSOS
 AS 
 BEGIN
 SELECT * FROM CURSO 
 END
 GO
  --LISTADO TELEFONOS POR ALUMNO
  CREATE PROC SP_LISTAR_TELEFONOS
  @CI INT
  AS
  BEGIN
  SELECT DISTINCT NUMERO_TEL, NOMBRE FROM TELEFONO  JOIN ALUMNO ON TELEFONO.CI = @CI WHERE ALUMNO.CI = @CI
  END
  GO
  --LISTA TELEFONOS
  CREATE PROC SP_lISTEL
  AS 
  BEGIN
  SELECT NUMERO_TEL FROM TELEFONO
  END
  GO
  create proc SP_ELIMINARTEL
  @NUMERO_TEL INT
  AS
  BEGIN
  DELETE TELEFONO FROM TELEFONO WHERE NUMERO_TEL =  @NUMERO_TEL
  END
  GO
 